# -*- coding: utf-8 -*-
"""Data_Conversions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HAOjyD59KgipUXcxG3zWGEf7ohjSVVvR

# Create Map from CSV Data
"""

# Install necessary libraries
!pip install pandas folium

# Import libraries
import pandas as pd
import folium

# Load data from CSV file
# Replace 'your_file.csv' with the path to your CSV file
df = pd.read_csv('conflict_report_rows.csv')

# Create a map centered around an average location in the data
# Ensure that 'latitude' and 'longitude' are the correct column names in your CSV file
map_center = [df['latitude'].mean(), df['longitude'].mean()]
m = folium.Map(location=map_center, zoom_start=10)

# Add points to the map
for idx, row in df.iterrows():
    folium.Marker([row['latitude'], row['longitude']]).add_to(m)

# Display the map
m

"""# Convert CSV to JSON"""

import pandas as pd

# Load your CSV file
df = pd.read_csv('2023.csv')

# Convert to JSON
df.to_json('2023geo.json', orient='records')

"""# Convert CSV to GeoJSON"""

import pandas as pd
import geopandas as gpd
from shapely.geometry import Point

# Load CSV file
csv_file = 'sample.csv'  # Replace with your CSV file path
df = pd.read_csv(csv_file)

# Ensure that latitude and longitude columns are in float format
df['Latitude'] = df['Latitude'].astype(float)
df['Longitude'] = df['Longitude'].astype(float)

# Create a GeoDataFrame
gdf = gpd.GeoDataFrame(
    df,
    geometry=[Point(xy) for xy in zip(df['Longitude'], df['Latitude'])]
)

# Set the coordinate reference system (CRS) to WGS 84 (EPSG:4326)
gdf.set_crs(epsg=4326, inplace=True)

# Save to GeoJSON file
geojson_file = 'output.geojson'  # Output file name
gdf.to_file(geojson_file, driver='GeoJSON')

"""# Convert GeoJSON to Shapefile"""

import geopandas as gpd

# Path to your GeoJSON file
geojson_file = 'output.geojson'  # Replace with your GeoJSON file path

# Load the GeoJSON file
gdf = gpd.read_file(geojson_file)

# Path for the output Shapefile
shapefile_output = 'sample.shp'  # Replace with your desired output path

# Save as Shapefile
gdf.to_file(shapefile_output, driver='ESRI Shapefile')

"""# Convert CSV to Shapefile"""

import pandas as pd
import geopandas as gpd
from shapely.geometry import Point

# Path to your CSV file
csv_file = 'December2023.csv'  # Replace with your CSV file path

# Load the CSV file
df = pd.read_csv(csv_file)

# Ensure latitude and longitude columns are in the correct format
# Replace 'latitude' and 'longitude' with your actual column names if they are different
df['latitude'] = df['latitude'].astype(float)
df['longitude'] = df['longitude'].astype(float)

# Create a GeoDataFrame
gdf = gpd.GeoDataFrame(
    df,
    geometry=gpd.points_from_xy(df['longitude'], df['latitude'])
)

# Set the coordinate reference system (CRS) to WGS 84 (EPSG:4326)
gdf.set_crs(epsg=4326, inplace=True)

# Path for the output Shapefile
shapefile_output = 'fullset.shp'  # Replace with your desired output path

# Save as Shapefile
gdf.to_file(shapefile_output, driver='ESRI Shapefile')